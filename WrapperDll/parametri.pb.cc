// Generated by the protocol buffer compiler.  DO NOT EDIT!
#include "stdafx.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "parametri.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace parametri {

namespace {

const ::google::protobuf::Descriptor* RichiestaLoadLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RichiestaLoadLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parametro_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parametro_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Parametro_TipoParametro_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EseguiFunzione_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EseguiFunzione_reflection_ = NULL;
const ::google::protobuf::Descriptor* RichiestaCloseLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RichiestaCloseLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Richiesta_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Richiesta_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Richiesta_TipoRichiesta_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_parametri_2eproto() {
  protobuf_AddDesc_parametri_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "parametri.proto");
  GOOGLE_CHECK(file != NULL);
  RichiestaLoadLibrary_descriptor_ = file->message_type(0);
  static const int RichiestaLoadLibrary_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaLoadLibrary, nomelibreria_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaLoadLibrary, path_),
  };
  RichiestaLoadLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RichiestaLoadLibrary_descriptor_,
      RichiestaLoadLibrary::default_instance_,
      RichiestaLoadLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaLoadLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaLoadLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RichiestaLoadLibrary));
  Parametro_descriptor_ = file->message_type(1);
  static const int Parametro_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, tipo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, stringa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, intero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, numero_double_),
  };
  Parametro_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parametro_descriptor_,
      Parametro::default_instance_,
      Parametro_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parametro, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parametro));
  Parametro_TipoParametro_descriptor_ = Parametro_descriptor_->enum_type(0);
  EseguiFunzione_descriptor_ = file->message_type(2);
  static const int EseguiFunzione_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, handle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, nome_funzione_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, parametri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, ritorno_),
  };
  EseguiFunzione_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EseguiFunzione_descriptor_,
      EseguiFunzione::default_instance_,
      EseguiFunzione_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EseguiFunzione, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EseguiFunzione));
  RichiestaCloseLibrary_descriptor_ = file->message_type(3);
  static const int RichiestaCloseLibrary_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaCloseLibrary, handle_),
  };
  RichiestaCloseLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RichiestaCloseLibrary_descriptor_,
      RichiestaCloseLibrary::default_instance_,
      RichiestaCloseLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaCloseLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RichiestaCloseLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RichiestaCloseLibrary));
  Richiesta_descriptor_ = file->message_type(4);
  static const int Richiesta_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, tipo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, richiesta_loadlibrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, esegui_funzione_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, richiesta_close_library_),
  };
  Richiesta_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Richiesta_descriptor_,
      Richiesta::default_instance_,
      Richiesta_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Richiesta, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Richiesta));
  Richiesta_TipoRichiesta_descriptor_ = Richiesta_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_parametri_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RichiestaLoadLibrary_descriptor_, &RichiestaLoadLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parametro_descriptor_, &Parametro::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EseguiFunzione_descriptor_, &EseguiFunzione::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RichiestaCloseLibrary_descriptor_, &RichiestaCloseLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Richiesta_descriptor_, &Richiesta::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_parametri_2eproto() {
  delete RichiestaLoadLibrary::default_instance_;
  delete RichiestaLoadLibrary_reflection_;
  delete Parametro::default_instance_;
  delete Parametro_reflection_;
  delete EseguiFunzione::default_instance_;
  delete EseguiFunzione_reflection_;
  delete RichiestaCloseLibrary::default_instance_;
  delete RichiestaCloseLibrary_reflection_;
  delete Richiesta::default_instance_;
  delete Richiesta_reflection_;
}

void protobuf_AddDesc_parametri_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017parametri.proto\022\tparametri\":\n\024Richiest"
    "aLoadLibrary\022\024\n\014NomeLibreria\030\001 \002(\t\022\014\n\004Pa"
    "th\030\002 \002(\t\"\371\001\n\tParametro\0220\n\004tipo\030\001 \002(\0162\".p"
    "arametri.Parametro.TipoParametro\022\017\n\007stri"
    "nga\030\002 \001(\t\022\016\n\006intero\030\003 \001(\005\022\025\n\rnumero_doub"
    "le\030\004 \001(\001\"\201\001\n\rTipoParametro\022\n\n\006INTERO\020\001\022\022"
    "\n\016INTERO_POINTER\020\002\022\026\n\022CONST_CHAR_POINTER"
    "\020\003\022\020\n\014CHAR_POINTER\020\004\022\010\n\004BYTE\020\005\022\020\n\014BYTE_P"
    "OINTER\020\006\022\n\n\006DOUBLE\020\007\"\207\001\n\016EseguiFunzione\022"
    "\016\n\006handle\030\001 \002(\005\022\025\n\rnome_funzione\030\002 \002(\t\022\'"
    "\n\tparametri\030\003 \003(\0132\024.parametri.Parametro\022"
    "%\n\007ritorno\030\004 \001(\0132\024.parametri.Parametro\"\'"
    "\n\025RichiestaCloseLibrary\022\016\n\006handle\030\001 \002(\005\""
    "\266\002\n\tRichiesta\0220\n\004tipo\030\001 \002(\0162\".parametri."
    "Richiesta.TipoRichiesta\022>\n\025Richiesta_Loa"
    "dLibrary\030\025 \001(\0132\037.parametri.RichiestaLoad"
    "Library\0222\n\017Esegui_Funzione\030\026 \001(\0132\031.param"
    "etri.EseguiFunzione\022A\n\027Richiesta_Close_L"
    "ibrary\030\027 \001(\0132 .parametri.RichiestaCloseL"
    "ibrary\"@\n\rTipoRichiesta\022\017\n\013LOADLIBRARY\020\001"
    "\022\014\n\010FUNCTION\020\002\022\020\n\014CLOSELIBRARY\020\003", 832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "parametri.proto", &protobuf_RegisterTypes);
  RichiestaLoadLibrary::default_instance_ = new RichiestaLoadLibrary();
  Parametro::default_instance_ = new Parametro();
  EseguiFunzione::default_instance_ = new EseguiFunzione();
  RichiestaCloseLibrary::default_instance_ = new RichiestaCloseLibrary();
  Richiesta::default_instance_ = new Richiesta();
  RichiestaLoadLibrary::default_instance_->InitAsDefaultInstance();
  Parametro::default_instance_->InitAsDefaultInstance();
  EseguiFunzione::default_instance_->InitAsDefaultInstance();
  RichiestaCloseLibrary::default_instance_->InitAsDefaultInstance();
  Richiesta::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_parametri_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_parametri_2eproto {
  StaticDescriptorInitializer_parametri_2eproto() {
    protobuf_AddDesc_parametri_2eproto();
  }
} static_descriptor_initializer_parametri_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RichiestaLoadLibrary::kNomeLibreriaFieldNumber;
const int RichiestaLoadLibrary::kPathFieldNumber;
#endif  // !_MSC_VER

RichiestaLoadLibrary::RichiestaLoadLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RichiestaLoadLibrary::InitAsDefaultInstance() {
}

RichiestaLoadLibrary::RichiestaLoadLibrary(const RichiestaLoadLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RichiestaLoadLibrary::SharedCtor() {
  _cached_size_ = 0;
  nomelibreria_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RichiestaLoadLibrary::~RichiestaLoadLibrary() {
  SharedDtor();
}

void RichiestaLoadLibrary::SharedDtor() {
  if (nomelibreria_ != &::google::protobuf::internal::kEmptyString) {
    delete nomelibreria_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void RichiestaLoadLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RichiestaLoadLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RichiestaLoadLibrary_descriptor_;
}

const RichiestaLoadLibrary& RichiestaLoadLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_parametri_2eproto();  return *default_instance_;
}

RichiestaLoadLibrary* RichiestaLoadLibrary::default_instance_ = NULL;

RichiestaLoadLibrary* RichiestaLoadLibrary::New() const {
  return new RichiestaLoadLibrary;
}

void RichiestaLoadLibrary::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nomelibreria()) {
      if (nomelibreria_ != &::google::protobuf::internal::kEmptyString) {
        nomelibreria_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RichiestaLoadLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string NomeLibreria = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nomelibreria()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nomelibreria().data(), this->nomelibreria().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Path;
        break;
      }
      
      // required string Path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RichiestaLoadLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string NomeLibreria = 1;
  if (has_nomelibreria()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nomelibreria().data(), this->nomelibreria().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->nomelibreria(), output);
  }
  
  // required string Path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RichiestaLoadLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string NomeLibreria = 1;
  if (has_nomelibreria()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nomelibreria().data(), this->nomelibreria().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nomelibreria(), target);
  }
  
  // required string Path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RichiestaLoadLibrary::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string NomeLibreria = 1;
    if (has_nomelibreria()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nomelibreria());
    }
    
    // required string Path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RichiestaLoadLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RichiestaLoadLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RichiestaLoadLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RichiestaLoadLibrary::MergeFrom(const RichiestaLoadLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nomelibreria()) {
      set_nomelibreria(from.nomelibreria());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RichiestaLoadLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RichiestaLoadLibrary::CopyFrom(const RichiestaLoadLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RichiestaLoadLibrary::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void RichiestaLoadLibrary::Swap(RichiestaLoadLibrary* other) {
  if (other != this) {
    std::swap(nomelibreria_, other->nomelibreria_);
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RichiestaLoadLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RichiestaLoadLibrary_descriptor_;
  metadata.reflection = RichiestaLoadLibrary_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Parametro_TipoParametro_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parametro_TipoParametro_descriptor_;
}
bool Parametro_TipoParametro_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Parametro_TipoParametro Parametro::INTERO;
const Parametro_TipoParametro Parametro::INTERO_POINTER;
const Parametro_TipoParametro Parametro::CONST_CHAR_POINTER;
const Parametro_TipoParametro Parametro::CHAR_POINTER;
const Parametro_TipoParametro Parametro::BYTE;
const Parametro_TipoParametro Parametro::BYTE_POINTER;
const Parametro_TipoParametro Parametro::DOUBLE;
const Parametro_TipoParametro Parametro::TipoParametro_MIN;
const Parametro_TipoParametro Parametro::TipoParametro_MAX;
const int Parametro::TipoParametro_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Parametro::kTipoFieldNumber;
const int Parametro::kStringaFieldNumber;
const int Parametro::kInteroFieldNumber;
const int Parametro::kNumeroDoubleFieldNumber;
#endif  // !_MSC_VER

Parametro::Parametro()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parametro::InitAsDefaultInstance() {
}

Parametro::Parametro(const Parametro& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parametro::SharedCtor() {
  _cached_size_ = 0;
  tipo_ = 1;
  stringa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  intero_ = 0;
  numero_double_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parametro::~Parametro() {
  SharedDtor();
}

void Parametro::SharedDtor() {
  if (stringa_ != &::google::protobuf::internal::kEmptyString) {
    delete stringa_;
  }
  if (this != default_instance_) {
  }
}

void Parametro::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parametro::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parametro_descriptor_;
}

const Parametro& Parametro::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_parametri_2eproto();  return *default_instance_;
}

Parametro* Parametro::default_instance_ = NULL;

Parametro* Parametro::New() const {
  return new Parametro;
}

void Parametro::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tipo_ = 1;
    if (has_stringa()) {
      if (stringa_ != &::google::protobuf::internal::kEmptyString) {
        stringa_->clear();
      }
    }
    intero_ = 0;
    numero_double_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parametro::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .parametri.Parametro.TipoParametro tipo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::parametri::Parametro_TipoParametro_IsValid(value)) {
            set_tipo(static_cast< ::parametri::Parametro_TipoParametro >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_stringa;
        break;
      }
      
      // optional string stringa = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stringa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringa()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stringa().data(), this->stringa().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_intero;
        break;
      }
      
      // optional int32 intero = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intero:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intero_)));
          set_has_intero();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_numero_double;
        break;
      }
      
      // optional double numero_double = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_numero_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &numero_double_)));
          set_has_numero_double();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parametro::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .parametri.Parametro.TipoParametro tipo = 1;
  if (has_tipo()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tipo(), output);
  }
  
  // optional string stringa = 2;
  if (has_stringa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringa().data(), this->stringa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stringa(), output);
  }
  
  // optional int32 intero = 3;
  if (has_intero()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intero(), output);
  }
  
  // optional double numero_double = 4;
  if (has_numero_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->numero_double(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parametro::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .parametri.Parametro.TipoParametro tipo = 1;
  if (has_tipo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tipo(), target);
  }
  
  // optional string stringa = 2;
  if (has_stringa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stringa().data(), this->stringa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stringa(), target);
  }
  
  // optional int32 intero = 3;
  if (has_intero()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intero(), target);
  }
  
  // optional double numero_double = 4;
  if (has_numero_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->numero_double(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parametro::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .parametri.Parametro.TipoParametro tipo = 1;
    if (has_tipo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tipo());
    }
    
    // optional string stringa = 2;
    if (has_stringa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringa());
    }
    
    // optional int32 intero = 3;
    if (has_intero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intero());
    }
    
    // optional double numero_double = 4;
    if (has_numero_double()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parametro::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parametro* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parametro*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parametro::MergeFrom(const Parametro& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tipo()) {
      set_tipo(from.tipo());
    }
    if (from.has_stringa()) {
      set_stringa(from.stringa());
    }
    if (from.has_intero()) {
      set_intero(from.intero());
    }
    if (from.has_numero_double()) {
      set_numero_double(from.numero_double());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parametro::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parametro::CopyFrom(const Parametro& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parametro::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Parametro::Swap(Parametro* other) {
  if (other != this) {
    std::swap(tipo_, other->tipo_);
    std::swap(stringa_, other->stringa_);
    std::swap(intero_, other->intero_);
    std::swap(numero_double_, other->numero_double_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parametro::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parametro_descriptor_;
  metadata.reflection = Parametro_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EseguiFunzione::kHandleFieldNumber;
const int EseguiFunzione::kNomeFunzioneFieldNumber;
const int EseguiFunzione::kParametriFieldNumber;
const int EseguiFunzione::kRitornoFieldNumber;
#endif  // !_MSC_VER

EseguiFunzione::EseguiFunzione()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EseguiFunzione::InitAsDefaultInstance() {
  ritorno_ = const_cast< ::parametri::Parametro*>(&::parametri::Parametro::default_instance());
}

EseguiFunzione::EseguiFunzione(const EseguiFunzione& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EseguiFunzione::SharedCtor() {
  _cached_size_ = 0;
  handle_ = 0;
  nome_funzione_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ritorno_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EseguiFunzione::~EseguiFunzione() {
  SharedDtor();
}

void EseguiFunzione::SharedDtor() {
  if (nome_funzione_ != &::google::protobuf::internal::kEmptyString) {
    delete nome_funzione_;
  }
  if (this != default_instance_) {
    delete ritorno_;
  }
}

void EseguiFunzione::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EseguiFunzione::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EseguiFunzione_descriptor_;
}

const EseguiFunzione& EseguiFunzione::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_parametri_2eproto();  return *default_instance_;
}

EseguiFunzione* EseguiFunzione::default_instance_ = NULL;

EseguiFunzione* EseguiFunzione::New() const {
  return new EseguiFunzione;
}

void EseguiFunzione::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    handle_ = 0;
    if (has_nome_funzione()) {
      if (nome_funzione_ != &::google::protobuf::internal::kEmptyString) {
        nome_funzione_->clear();
      }
    }
    if (has_ritorno()) {
      if (ritorno_ != NULL) ritorno_->::parametri::Parametro::Clear();
    }
  }
  parametri_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EseguiFunzione::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 handle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
          set_has_handle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nome_funzione;
        break;
      }
      
      // required string nome_funzione = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nome_funzione:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome_funzione()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nome_funzione().data(), this->nome_funzione().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_parametri;
        break;
      }
      
      // repeated .parametri.Parametro parametri = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parametri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parametri()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_parametri;
        if (input->ExpectTag(34)) goto parse_ritorno;
        break;
      }
      
      // optional .parametri.Parametro ritorno = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ritorno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ritorno()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EseguiFunzione::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 handle = 1;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->handle(), output);
  }
  
  // required string nome_funzione = 2;
  if (has_nome_funzione()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nome_funzione().data(), this->nome_funzione().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->nome_funzione(), output);
  }
  
  // repeated .parametri.Parametro parametri = 3;
  for (int i = 0; i < this->parametri_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parametri(i), output);
  }
  
  // optional .parametri.Parametro ritorno = 4;
  if (has_ritorno()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->ritorno(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EseguiFunzione::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 handle = 1;
  if (has_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->handle(), target);
  }
  
  // required string nome_funzione = 2;
  if (has_nome_funzione()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nome_funzione().data(), this->nome_funzione().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nome_funzione(), target);
  }
  
  // repeated .parametri.Parametro parametri = 3;
  for (int i = 0; i < this->parametri_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->parametri(i), target);
  }
  
  // optional .parametri.Parametro ritorno = 4;
  if (has_ritorno()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->ritorno(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EseguiFunzione::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handle());
    }
    
    // required string nome_funzione = 2;
    if (has_nome_funzione()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nome_funzione());
    }
    
    // optional .parametri.Parametro ritorno = 4;
    if (has_ritorno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ritorno());
    }
    
  }
  // repeated .parametri.Parametro parametri = 3;
  total_size += 1 * this->parametri_size();
  for (int i = 0; i < this->parametri_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parametri(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EseguiFunzione::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EseguiFunzione* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EseguiFunzione*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EseguiFunzione::MergeFrom(const EseguiFunzione& from) {
  GOOGLE_CHECK_NE(&from, this);
  parametri_.MergeFrom(from.parametri_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_handle()) {
      set_handle(from.handle());
    }
    if (from.has_nome_funzione()) {
      set_nome_funzione(from.nome_funzione());
    }
    if (from.has_ritorno()) {
      mutable_ritorno()->::parametri::Parametro::MergeFrom(from.ritorno());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EseguiFunzione::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EseguiFunzione::CopyFrom(const EseguiFunzione& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EseguiFunzione::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  for (int i = 0; i < parametri_size(); i++) {
    if (!this->parametri(i).IsInitialized()) return false;
  }
  if (has_ritorno()) {
    if (!this->ritorno().IsInitialized()) return false;
  }
  return true;
}

void EseguiFunzione::Swap(EseguiFunzione* other) {
  if (other != this) {
    std::swap(handle_, other->handle_);
    std::swap(nome_funzione_, other->nome_funzione_);
    parametri_.Swap(&other->parametri_);
    std::swap(ritorno_, other->ritorno_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EseguiFunzione::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EseguiFunzione_descriptor_;
  metadata.reflection = EseguiFunzione_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RichiestaCloseLibrary::kHandleFieldNumber;
#endif  // !_MSC_VER

RichiestaCloseLibrary::RichiestaCloseLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RichiestaCloseLibrary::InitAsDefaultInstance() {
}

RichiestaCloseLibrary::RichiestaCloseLibrary(const RichiestaCloseLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RichiestaCloseLibrary::SharedCtor() {
  _cached_size_ = 0;
  handle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RichiestaCloseLibrary::~RichiestaCloseLibrary() {
  SharedDtor();
}

void RichiestaCloseLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RichiestaCloseLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RichiestaCloseLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RichiestaCloseLibrary_descriptor_;
}

const RichiestaCloseLibrary& RichiestaCloseLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_parametri_2eproto();  return *default_instance_;
}

RichiestaCloseLibrary* RichiestaCloseLibrary::default_instance_ = NULL;

RichiestaCloseLibrary* RichiestaCloseLibrary::New() const {
  return new RichiestaCloseLibrary;
}

void RichiestaCloseLibrary::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    handle_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RichiestaCloseLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 handle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handle_)));
          set_has_handle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RichiestaCloseLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 handle = 1;
  if (has_handle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->handle(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RichiestaCloseLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 handle = 1;
  if (has_handle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->handle(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RichiestaCloseLibrary::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 handle = 1;
    if (has_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handle());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RichiestaCloseLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RichiestaCloseLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RichiestaCloseLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RichiestaCloseLibrary::MergeFrom(const RichiestaCloseLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_handle()) {
      set_handle(from.handle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RichiestaCloseLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RichiestaCloseLibrary::CopyFrom(const RichiestaCloseLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RichiestaCloseLibrary::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void RichiestaCloseLibrary::Swap(RichiestaCloseLibrary* other) {
  if (other != this) {
    std::swap(handle_, other->handle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RichiestaCloseLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RichiestaCloseLibrary_descriptor_;
  metadata.reflection = RichiestaCloseLibrary_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Richiesta_TipoRichiesta_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Richiesta_TipoRichiesta_descriptor_;
}
bool Richiesta_TipoRichiesta_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Richiesta_TipoRichiesta Richiesta::LOADLIBRARY;
const Richiesta_TipoRichiesta Richiesta::FUNCTION;
const Richiesta_TipoRichiesta Richiesta::CLOSELIBRARY;
const Richiesta_TipoRichiesta Richiesta::TipoRichiesta_MIN;
const Richiesta_TipoRichiesta Richiesta::TipoRichiesta_MAX;
const int Richiesta::TipoRichiesta_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Richiesta::kTipoFieldNumber;
const int Richiesta::kRichiestaLoadLibraryFieldNumber;
const int Richiesta::kEseguiFunzioneFieldNumber;
const int Richiesta::kRichiestaCloseLibraryFieldNumber;
#endif  // !_MSC_VER

Richiesta::Richiesta()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Richiesta::InitAsDefaultInstance() {
  richiesta_loadlibrary_ = const_cast< ::parametri::RichiestaLoadLibrary*>(&::parametri::RichiestaLoadLibrary::default_instance());
  esegui_funzione_ = const_cast< ::parametri::EseguiFunzione*>(&::parametri::EseguiFunzione::default_instance());
  richiesta_close_library_ = const_cast< ::parametri::RichiestaCloseLibrary*>(&::parametri::RichiestaCloseLibrary::default_instance());
}

Richiesta::Richiesta(const Richiesta& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Richiesta::SharedCtor() {
  _cached_size_ = 0;
  tipo_ = 1;
  richiesta_loadlibrary_ = NULL;
  esegui_funzione_ = NULL;
  richiesta_close_library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Richiesta::~Richiesta() {
  SharedDtor();
}

void Richiesta::SharedDtor() {
  if (this != default_instance_) {
    delete richiesta_loadlibrary_;
    delete esegui_funzione_;
    delete richiesta_close_library_;
  }
}

void Richiesta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Richiesta::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Richiesta_descriptor_;
}

const Richiesta& Richiesta::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_parametri_2eproto();  return *default_instance_;
}

Richiesta* Richiesta::default_instance_ = NULL;

Richiesta* Richiesta::New() const {
  return new Richiesta;
}

void Richiesta::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tipo_ = 1;
    if (has_richiesta_loadlibrary()) {
      if (richiesta_loadlibrary_ != NULL) richiesta_loadlibrary_->::parametri::RichiestaLoadLibrary::Clear();
    }
    if (has_esegui_funzione()) {
      if (esegui_funzione_ != NULL) esegui_funzione_->::parametri::EseguiFunzione::Clear();
    }
    if (has_richiesta_close_library()) {
      if (richiesta_close_library_ != NULL) richiesta_close_library_->::parametri::RichiestaCloseLibrary::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Richiesta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .parametri.Richiesta.TipoRichiesta tipo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::parametri::Richiesta_TipoRichiesta_IsValid(value)) {
            set_tipo(static_cast< ::parametri::Richiesta_TipoRichiesta >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_Richiesta_LoadLibrary;
        break;
      }
      
      // optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Richiesta_LoadLibrary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_richiesta_loadlibrary()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_Esegui_Funzione;
        break;
      }
      
      // optional .parametri.EseguiFunzione Esegui_Funzione = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Esegui_Funzione:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_esegui_funzione()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_Richiesta_Close_Library;
        break;
      }
      
      // optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Richiesta_Close_Library:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_richiesta_close_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Richiesta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .parametri.Richiesta.TipoRichiesta tipo = 1;
  if (has_tipo()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tipo(), output);
  }
  
  // optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
  if (has_richiesta_loadlibrary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->richiesta_loadlibrary(), output);
  }
  
  // optional .parametri.EseguiFunzione Esegui_Funzione = 22;
  if (has_esegui_funzione()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->esegui_funzione(), output);
  }
  
  // optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
  if (has_richiesta_close_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->richiesta_close_library(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Richiesta::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .parametri.Richiesta.TipoRichiesta tipo = 1;
  if (has_tipo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tipo(), target);
  }
  
  // optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
  if (has_richiesta_loadlibrary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->richiesta_loadlibrary(), target);
  }
  
  // optional .parametri.EseguiFunzione Esegui_Funzione = 22;
  if (has_esegui_funzione()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->esegui_funzione(), target);
  }
  
  // optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
  if (has_richiesta_close_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->richiesta_close_library(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Richiesta::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .parametri.Richiesta.TipoRichiesta tipo = 1;
    if (has_tipo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tipo());
    }
    
    // optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
    if (has_richiesta_loadlibrary()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->richiesta_loadlibrary());
    }
    
    // optional .parametri.EseguiFunzione Esegui_Funzione = 22;
    if (has_esegui_funzione()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->esegui_funzione());
    }
    
    // optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
    if (has_richiesta_close_library()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->richiesta_close_library());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Richiesta::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Richiesta* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Richiesta*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Richiesta::MergeFrom(const Richiesta& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tipo()) {
      set_tipo(from.tipo());
    }
    if (from.has_richiesta_loadlibrary()) {
      mutable_richiesta_loadlibrary()->::parametri::RichiestaLoadLibrary::MergeFrom(from.richiesta_loadlibrary());
    }
    if (from.has_esegui_funzione()) {
      mutable_esegui_funzione()->::parametri::EseguiFunzione::MergeFrom(from.esegui_funzione());
    }
    if (from.has_richiesta_close_library()) {
      mutable_richiesta_close_library()->::parametri::RichiestaCloseLibrary::MergeFrom(from.richiesta_close_library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Richiesta::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Richiesta::CopyFrom(const Richiesta& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Richiesta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_richiesta_loadlibrary()) {
    if (!this->richiesta_loadlibrary().IsInitialized()) return false;
  }
  if (has_esegui_funzione()) {
    if (!this->esegui_funzione().IsInitialized()) return false;
  }
  if (has_richiesta_close_library()) {
    if (!this->richiesta_close_library().IsInitialized()) return false;
  }
  return true;
}

void Richiesta::Swap(Richiesta* other) {
  if (other != this) {
    std::swap(tipo_, other->tipo_);
    std::swap(richiesta_loadlibrary_, other->richiesta_loadlibrary_);
    std::swap(esegui_funzione_, other->esegui_funzione_);
    std::swap(richiesta_close_library_, other->richiesta_close_library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Richiesta::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Richiesta_descriptor_;
  metadata.reflection = Richiesta_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace parametri

// @@protoc_insertion_point(global_scope)
