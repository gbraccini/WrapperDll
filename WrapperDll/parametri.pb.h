// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parametri.proto

#ifndef PROTOBUF_parametri_2eproto__INCLUDED
#define PROTOBUF_parametri_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace parametri {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_parametri_2eproto();
void protobuf_AssignDesc_parametri_2eproto();
void protobuf_ShutdownFile_parametri_2eproto();

class RichiestaLoadLibrary;
class Parametro;
class EseguiFunzione;
class RichiestaCloseLibrary;
class Richiesta;

enum Parametro_TipoParametro {
  Parametro_TipoParametro_INTERO = 1,
  Parametro_TipoParametro_INTERO_POINTER = 2,
  Parametro_TipoParametro_CONST_CHAR_POINTER = 3,
  Parametro_TipoParametro_CHAR_POINTER = 4,
  Parametro_TipoParametro_BYTE = 5,
  Parametro_TipoParametro_BYTE_POINTER = 6,
  Parametro_TipoParametro_DOUBLE = 7
};
bool Parametro_TipoParametro_IsValid(int value);
const Parametro_TipoParametro Parametro_TipoParametro_TipoParametro_MIN = Parametro_TipoParametro_INTERO;
const Parametro_TipoParametro Parametro_TipoParametro_TipoParametro_MAX = Parametro_TipoParametro_DOUBLE;
const int Parametro_TipoParametro_TipoParametro_ARRAYSIZE = Parametro_TipoParametro_TipoParametro_MAX + 1;

const ::google::protobuf::EnumDescriptor* Parametro_TipoParametro_descriptor();
inline const ::std::string& Parametro_TipoParametro_Name(Parametro_TipoParametro value) {
  return ::google::protobuf::internal::NameOfEnum(
    Parametro_TipoParametro_descriptor(), value);
}
inline bool Parametro_TipoParametro_Parse(
    const ::std::string& name, Parametro_TipoParametro* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Parametro_TipoParametro>(
    Parametro_TipoParametro_descriptor(), name, value);
}
enum Richiesta_TipoRichiesta {
  Richiesta_TipoRichiesta_LOADLIBRARY = 1,
  Richiesta_TipoRichiesta_FUNCTION = 2,
  Richiesta_TipoRichiesta_CLOSELIBRARY = 3
};
bool Richiesta_TipoRichiesta_IsValid(int value);
const Richiesta_TipoRichiesta Richiesta_TipoRichiesta_TipoRichiesta_MIN = Richiesta_TipoRichiesta_LOADLIBRARY;
const Richiesta_TipoRichiesta Richiesta_TipoRichiesta_TipoRichiesta_MAX = Richiesta_TipoRichiesta_CLOSELIBRARY;
const int Richiesta_TipoRichiesta_TipoRichiesta_ARRAYSIZE = Richiesta_TipoRichiesta_TipoRichiesta_MAX + 1;

const ::google::protobuf::EnumDescriptor* Richiesta_TipoRichiesta_descriptor();
inline const ::std::string& Richiesta_TipoRichiesta_Name(Richiesta_TipoRichiesta value) {
  return ::google::protobuf::internal::NameOfEnum(
    Richiesta_TipoRichiesta_descriptor(), value);
}
inline bool Richiesta_TipoRichiesta_Parse(
    const ::std::string& name, Richiesta_TipoRichiesta* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Richiesta_TipoRichiesta>(
    Richiesta_TipoRichiesta_descriptor(), name, value);
}
// ===================================================================

class RichiestaLoadLibrary : public ::google::protobuf::Message {
 public:
  RichiestaLoadLibrary();
  virtual ~RichiestaLoadLibrary();
  
  RichiestaLoadLibrary(const RichiestaLoadLibrary& from);
  
  inline RichiestaLoadLibrary& operator=(const RichiestaLoadLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RichiestaLoadLibrary& default_instance();
  
  void Swap(RichiestaLoadLibrary* other);
  
  // implements Message ----------------------------------------------
  
  RichiestaLoadLibrary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RichiestaLoadLibrary& from);
  void MergeFrom(const RichiestaLoadLibrary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string NomeLibreria = 1;
  inline bool has_nomelibreria() const;
  inline void clear_nomelibreria();
  static const int kNomeLibreriaFieldNumber = 1;
  inline const ::std::string& nomelibreria() const;
  inline void set_nomelibreria(const ::std::string& value);
  inline void set_nomelibreria(const char* value);
  inline void set_nomelibreria(const char* value, size_t size);
  inline ::std::string* mutable_nomelibreria();
  inline ::std::string* release_nomelibreria();
  
  // required string Path = 2;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:parametri.RichiestaLoadLibrary)
 private:
  inline void set_has_nomelibreria();
  inline void clear_has_nomelibreria();
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nomelibreria_;
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_parametri_2eproto();
  friend void protobuf_AssignDesc_parametri_2eproto();
  friend void protobuf_ShutdownFile_parametri_2eproto();
  
  void InitAsDefaultInstance();
  static RichiestaLoadLibrary* default_instance_;
};
// -------------------------------------------------------------------

class Parametro : public ::google::protobuf::Message {
 public:
  Parametro();
  virtual ~Parametro();
  
  Parametro(const Parametro& from);
  
  inline Parametro& operator=(const Parametro& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Parametro& default_instance();
  
  void Swap(Parametro* other);
  
  // implements Message ----------------------------------------------
  
  Parametro* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Parametro& from);
  void MergeFrom(const Parametro& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Parametro_TipoParametro TipoParametro;
  static const TipoParametro INTERO = Parametro_TipoParametro_INTERO;
  static const TipoParametro INTERO_POINTER = Parametro_TipoParametro_INTERO_POINTER;
  static const TipoParametro CONST_CHAR_POINTER = Parametro_TipoParametro_CONST_CHAR_POINTER;
  static const TipoParametro CHAR_POINTER = Parametro_TipoParametro_CHAR_POINTER;
  static const TipoParametro BYTE = Parametro_TipoParametro_BYTE;
  static const TipoParametro BYTE_POINTER = Parametro_TipoParametro_BYTE_POINTER;
  static const TipoParametro DOUBLE = Parametro_TipoParametro_DOUBLE;
  static inline bool TipoParametro_IsValid(int value) {
    return Parametro_TipoParametro_IsValid(value);
  }
  static const TipoParametro TipoParametro_MIN =
    Parametro_TipoParametro_TipoParametro_MIN;
  static const TipoParametro TipoParametro_MAX =
    Parametro_TipoParametro_TipoParametro_MAX;
  static const int TipoParametro_ARRAYSIZE =
    Parametro_TipoParametro_TipoParametro_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TipoParametro_descriptor() {
    return Parametro_TipoParametro_descriptor();
  }
  static inline const ::std::string& TipoParametro_Name(TipoParametro value) {
    return Parametro_TipoParametro_Name(value);
  }
  static inline bool TipoParametro_Parse(const ::std::string& name,
      TipoParametro* value) {
    return Parametro_TipoParametro_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .parametri.Parametro.TipoParametro tipo = 1;
  inline bool has_tipo() const;
  inline void clear_tipo();
  static const int kTipoFieldNumber = 1;
  inline ::parametri::Parametro_TipoParametro tipo() const;
  inline void set_tipo(::parametri::Parametro_TipoParametro value);
  
  // optional string stringa = 2;
  inline bool has_stringa() const;
  inline void clear_stringa();
  static const int kStringaFieldNumber = 2;
  inline const ::std::string& stringa() const;
  inline void set_stringa(const ::std::string& value);
  inline void set_stringa(const char* value);
  inline void set_stringa(const char* value, size_t size);
  inline ::std::string* mutable_stringa();
  inline ::std::string* release_stringa();
  
  // optional int32 intero = 3;
  inline bool has_intero() const;
  inline void clear_intero();
  static const int kInteroFieldNumber = 3;
  inline ::google::protobuf::int32 intero() const;
  inline void set_intero(::google::protobuf::int32 value);
  
  // optional double numero_double = 4;
  inline bool has_numero_double() const;
  inline void clear_numero_double();
  static const int kNumeroDoubleFieldNumber = 4;
  inline double numero_double() const;
  inline void set_numero_double(double value);
  
  // @@protoc_insertion_point(class_scope:parametri.Parametro)
 private:
  inline void set_has_tipo();
  inline void clear_has_tipo();
  inline void set_has_stringa();
  inline void clear_has_stringa();
  inline void set_has_intero();
  inline void clear_has_intero();
  inline void set_has_numero_double();
  inline void clear_has_numero_double();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stringa_;
  int tipo_;
  ::google::protobuf::int32 intero_;
  double numero_double_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_parametri_2eproto();
  friend void protobuf_AssignDesc_parametri_2eproto();
  friend void protobuf_ShutdownFile_parametri_2eproto();
  
  void InitAsDefaultInstance();
  static Parametro* default_instance_;
};
// -------------------------------------------------------------------

class EseguiFunzione : public ::google::protobuf::Message {
 public:
  EseguiFunzione();
  virtual ~EseguiFunzione();
  
  EseguiFunzione(const EseguiFunzione& from);
  
  inline EseguiFunzione& operator=(const EseguiFunzione& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EseguiFunzione& default_instance();
  
  void Swap(EseguiFunzione* other);
  
  // implements Message ----------------------------------------------
  
  EseguiFunzione* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EseguiFunzione& from);
  void MergeFrom(const EseguiFunzione& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 handle = 1;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 1;
  inline ::google::protobuf::int32 handle() const;
  inline void set_handle(::google::protobuf::int32 value);
  
  // required string nome_funzione = 2;
  inline bool has_nome_funzione() const;
  inline void clear_nome_funzione();
  static const int kNomeFunzioneFieldNumber = 2;
  inline const ::std::string& nome_funzione() const;
  inline void set_nome_funzione(const ::std::string& value);
  inline void set_nome_funzione(const char* value);
  inline void set_nome_funzione(const char* value, size_t size);
  inline ::std::string* mutable_nome_funzione();
  inline ::std::string* release_nome_funzione();
  
  // repeated .parametri.Parametro parametri = 3;
  inline int parametri_size() const;
  inline void clear_parametri();
  static const int kParametriFieldNumber = 3;
  inline const ::parametri::Parametro& parametri(int index) const;
  inline ::parametri::Parametro* mutable_parametri(int index);
  inline ::parametri::Parametro* add_parametri();
  inline const ::google::protobuf::RepeatedPtrField< ::parametri::Parametro >&
      parametri() const;
  inline ::google::protobuf::RepeatedPtrField< ::parametri::Parametro >*
      mutable_parametri();
  
  // optional .parametri.Parametro ritorno = 4;
  inline bool has_ritorno() const;
  inline void clear_ritorno();
  static const int kRitornoFieldNumber = 4;
  inline const ::parametri::Parametro& ritorno() const;
  inline ::parametri::Parametro* mutable_ritorno();
  inline ::parametri::Parametro* release_ritorno();
  
  // @@protoc_insertion_point(class_scope:parametri.EseguiFunzione)
 private:
  inline void set_has_handle();
  inline void clear_has_handle();
  inline void set_has_nome_funzione();
  inline void clear_has_nome_funzione();
  inline void set_has_ritorno();
  inline void clear_has_ritorno();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nome_funzione_;
  ::google::protobuf::RepeatedPtrField< ::parametri::Parametro > parametri_;
  ::parametri::Parametro* ritorno_;
  ::google::protobuf::int32 handle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_parametri_2eproto();
  friend void protobuf_AssignDesc_parametri_2eproto();
  friend void protobuf_ShutdownFile_parametri_2eproto();
  
  void InitAsDefaultInstance();
  static EseguiFunzione* default_instance_;
};
// -------------------------------------------------------------------

class RichiestaCloseLibrary : public ::google::protobuf::Message {
 public:
  RichiestaCloseLibrary();
  virtual ~RichiestaCloseLibrary();
  
  RichiestaCloseLibrary(const RichiestaCloseLibrary& from);
  
  inline RichiestaCloseLibrary& operator=(const RichiestaCloseLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RichiestaCloseLibrary& default_instance();
  
  void Swap(RichiestaCloseLibrary* other);
  
  // implements Message ----------------------------------------------
  
  RichiestaCloseLibrary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RichiestaCloseLibrary& from);
  void MergeFrom(const RichiestaCloseLibrary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 handle = 1;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 1;
  inline ::google::protobuf::int32 handle() const;
  inline void set_handle(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:parametri.RichiestaCloseLibrary)
 private:
  inline void set_has_handle();
  inline void clear_has_handle();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 handle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_parametri_2eproto();
  friend void protobuf_AssignDesc_parametri_2eproto();
  friend void protobuf_ShutdownFile_parametri_2eproto();
  
  void InitAsDefaultInstance();
  static RichiestaCloseLibrary* default_instance_;
};
// -------------------------------------------------------------------

class Richiesta : public ::google::protobuf::Message {
 public:
  Richiesta();
  virtual ~Richiesta();
  
  Richiesta(const Richiesta& from);
  
  inline Richiesta& operator=(const Richiesta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Richiesta& default_instance();
  
  void Swap(Richiesta* other);
  
  // implements Message ----------------------------------------------
  
  Richiesta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Richiesta& from);
  void MergeFrom(const Richiesta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Richiesta_TipoRichiesta TipoRichiesta;
  static const TipoRichiesta LOADLIBRARY = Richiesta_TipoRichiesta_LOADLIBRARY;
  static const TipoRichiesta FUNCTION = Richiesta_TipoRichiesta_FUNCTION;
  static const TipoRichiesta CLOSELIBRARY = Richiesta_TipoRichiesta_CLOSELIBRARY;
  static inline bool TipoRichiesta_IsValid(int value) {
    return Richiesta_TipoRichiesta_IsValid(value);
  }
  static const TipoRichiesta TipoRichiesta_MIN =
    Richiesta_TipoRichiesta_TipoRichiesta_MIN;
  static const TipoRichiesta TipoRichiesta_MAX =
    Richiesta_TipoRichiesta_TipoRichiesta_MAX;
  static const int TipoRichiesta_ARRAYSIZE =
    Richiesta_TipoRichiesta_TipoRichiesta_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TipoRichiesta_descriptor() {
    return Richiesta_TipoRichiesta_descriptor();
  }
  static inline const ::std::string& TipoRichiesta_Name(TipoRichiesta value) {
    return Richiesta_TipoRichiesta_Name(value);
  }
  static inline bool TipoRichiesta_Parse(const ::std::string& name,
      TipoRichiesta* value) {
    return Richiesta_TipoRichiesta_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .parametri.Richiesta.TipoRichiesta tipo = 1;
  inline bool has_tipo() const;
  inline void clear_tipo();
  static const int kTipoFieldNumber = 1;
  inline ::parametri::Richiesta_TipoRichiesta tipo() const;
  inline void set_tipo(::parametri::Richiesta_TipoRichiesta value);
  
  // optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
  inline bool has_richiesta_loadlibrary() const;
  inline void clear_richiesta_loadlibrary();
  static const int kRichiestaLoadLibraryFieldNumber = 21;
  inline const ::parametri::RichiestaLoadLibrary& richiesta_loadlibrary() const;
  inline ::parametri::RichiestaLoadLibrary* mutable_richiesta_loadlibrary();
  inline ::parametri::RichiestaLoadLibrary* release_richiesta_loadlibrary();
  
  // optional .parametri.EseguiFunzione Esegui_Funzione = 22;
  inline bool has_esegui_funzione() const;
  inline void clear_esegui_funzione();
  static const int kEseguiFunzioneFieldNumber = 22;
  inline const ::parametri::EseguiFunzione& esegui_funzione() const;
  inline ::parametri::EseguiFunzione* mutable_esegui_funzione();
  inline ::parametri::EseguiFunzione* release_esegui_funzione();
  
  // optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
  inline bool has_richiesta_close_library() const;
  inline void clear_richiesta_close_library();
  static const int kRichiestaCloseLibraryFieldNumber = 23;
  inline const ::parametri::RichiestaCloseLibrary& richiesta_close_library() const;
  inline ::parametri::RichiestaCloseLibrary* mutable_richiesta_close_library();
  inline ::parametri::RichiestaCloseLibrary* release_richiesta_close_library();
  
  // @@protoc_insertion_point(class_scope:parametri.Richiesta)
 private:
  inline void set_has_tipo();
  inline void clear_has_tipo();
  inline void set_has_richiesta_loadlibrary();
  inline void clear_has_richiesta_loadlibrary();
  inline void set_has_esegui_funzione();
  inline void clear_has_esegui_funzione();
  inline void set_has_richiesta_close_library();
  inline void clear_has_richiesta_close_library();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::parametri::RichiestaLoadLibrary* richiesta_loadlibrary_;
  ::parametri::EseguiFunzione* esegui_funzione_;
  ::parametri::RichiestaCloseLibrary* richiesta_close_library_;
  int tipo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_parametri_2eproto();
  friend void protobuf_AssignDesc_parametri_2eproto();
  friend void protobuf_ShutdownFile_parametri_2eproto();
  
  void InitAsDefaultInstance();
  static Richiesta* default_instance_;
};
// ===================================================================


// ===================================================================

// RichiestaLoadLibrary

// required string NomeLibreria = 1;
inline bool RichiestaLoadLibrary::has_nomelibreria() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RichiestaLoadLibrary::set_has_nomelibreria() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RichiestaLoadLibrary::clear_has_nomelibreria() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RichiestaLoadLibrary::clear_nomelibreria() {
  if (nomelibreria_ != &::google::protobuf::internal::kEmptyString) {
    nomelibreria_->clear();
  }
  clear_has_nomelibreria();
}
inline const ::std::string& RichiestaLoadLibrary::nomelibreria() const {
  return *nomelibreria_;
}
inline void RichiestaLoadLibrary::set_nomelibreria(const ::std::string& value) {
  set_has_nomelibreria();
  if (nomelibreria_ == &::google::protobuf::internal::kEmptyString) {
    nomelibreria_ = new ::std::string;
  }
  nomelibreria_->assign(value);
}
inline void RichiestaLoadLibrary::set_nomelibreria(const char* value) {
  set_has_nomelibreria();
  if (nomelibreria_ == &::google::protobuf::internal::kEmptyString) {
    nomelibreria_ = new ::std::string;
  }
  nomelibreria_->assign(value);
}
inline void RichiestaLoadLibrary::set_nomelibreria(const char* value, size_t size) {
  set_has_nomelibreria();
  if (nomelibreria_ == &::google::protobuf::internal::kEmptyString) {
    nomelibreria_ = new ::std::string;
  }
  nomelibreria_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RichiestaLoadLibrary::mutable_nomelibreria() {
  set_has_nomelibreria();
  if (nomelibreria_ == &::google::protobuf::internal::kEmptyString) {
    nomelibreria_ = new ::std::string;
  }
  return nomelibreria_;
}
inline ::std::string* RichiestaLoadLibrary::release_nomelibreria() {
  clear_has_nomelibreria();
  if (nomelibreria_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nomelibreria_;
    nomelibreria_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string Path = 2;
inline bool RichiestaLoadLibrary::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RichiestaLoadLibrary::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RichiestaLoadLibrary::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RichiestaLoadLibrary::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& RichiestaLoadLibrary::path() const {
  return *path_;
}
inline void RichiestaLoadLibrary::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void RichiestaLoadLibrary::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void RichiestaLoadLibrary::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RichiestaLoadLibrary::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* RichiestaLoadLibrary::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Parametro

// required .parametri.Parametro.TipoParametro tipo = 1;
inline bool Parametro::has_tipo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Parametro::set_has_tipo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Parametro::clear_has_tipo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Parametro::clear_tipo() {
  tipo_ = 1;
  clear_has_tipo();
}
inline ::parametri::Parametro_TipoParametro Parametro::tipo() const {
  return static_cast< ::parametri::Parametro_TipoParametro >(tipo_);
}
inline void Parametro::set_tipo(::parametri::Parametro_TipoParametro value) {
  GOOGLE_DCHECK(::parametri::Parametro_TipoParametro_IsValid(value));
  set_has_tipo();
  tipo_ = value;
}

// optional string stringa = 2;
inline bool Parametro::has_stringa() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Parametro::set_has_stringa() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Parametro::clear_has_stringa() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Parametro::clear_stringa() {
  if (stringa_ != &::google::protobuf::internal::kEmptyString) {
    stringa_->clear();
  }
  clear_has_stringa();
}
inline const ::std::string& Parametro::stringa() const {
  return *stringa_;
}
inline void Parametro::set_stringa(const ::std::string& value) {
  set_has_stringa();
  if (stringa_ == &::google::protobuf::internal::kEmptyString) {
    stringa_ = new ::std::string;
  }
  stringa_->assign(value);
}
inline void Parametro::set_stringa(const char* value) {
  set_has_stringa();
  if (stringa_ == &::google::protobuf::internal::kEmptyString) {
    stringa_ = new ::std::string;
  }
  stringa_->assign(value);
}
inline void Parametro::set_stringa(const char* value, size_t size) {
  set_has_stringa();
  if (stringa_ == &::google::protobuf::internal::kEmptyString) {
    stringa_ = new ::std::string;
  }
  stringa_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Parametro::mutable_stringa() {
  set_has_stringa();
  if (stringa_ == &::google::protobuf::internal::kEmptyString) {
    stringa_ = new ::std::string;
  }
  return stringa_;
}
inline ::std::string* Parametro::release_stringa() {
  clear_has_stringa();
  if (stringa_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stringa_;
    stringa_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 intero = 3;
inline bool Parametro::has_intero() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Parametro::set_has_intero() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Parametro::clear_has_intero() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Parametro::clear_intero() {
  intero_ = 0;
  clear_has_intero();
}
inline ::google::protobuf::int32 Parametro::intero() const {
  return intero_;
}
inline void Parametro::set_intero(::google::protobuf::int32 value) {
  set_has_intero();
  intero_ = value;
}

// optional double numero_double = 4;
inline bool Parametro::has_numero_double() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Parametro::set_has_numero_double() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Parametro::clear_has_numero_double() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Parametro::clear_numero_double() {
  numero_double_ = 0;
  clear_has_numero_double();
}
inline double Parametro::numero_double() const {
  return numero_double_;
}
inline void Parametro::set_numero_double(double value) {
  set_has_numero_double();
  numero_double_ = value;
}

// -------------------------------------------------------------------

// EseguiFunzione

// required int32 handle = 1;
inline bool EseguiFunzione::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EseguiFunzione::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EseguiFunzione::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EseguiFunzione::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 EseguiFunzione::handle() const {
  return handle_;
}
inline void EseguiFunzione::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
}

// required string nome_funzione = 2;
inline bool EseguiFunzione::has_nome_funzione() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EseguiFunzione::set_has_nome_funzione() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EseguiFunzione::clear_has_nome_funzione() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EseguiFunzione::clear_nome_funzione() {
  if (nome_funzione_ != &::google::protobuf::internal::kEmptyString) {
    nome_funzione_->clear();
  }
  clear_has_nome_funzione();
}
inline const ::std::string& EseguiFunzione::nome_funzione() const {
  return *nome_funzione_;
}
inline void EseguiFunzione::set_nome_funzione(const ::std::string& value) {
  set_has_nome_funzione();
  if (nome_funzione_ == &::google::protobuf::internal::kEmptyString) {
    nome_funzione_ = new ::std::string;
  }
  nome_funzione_->assign(value);
}
inline void EseguiFunzione::set_nome_funzione(const char* value) {
  set_has_nome_funzione();
  if (nome_funzione_ == &::google::protobuf::internal::kEmptyString) {
    nome_funzione_ = new ::std::string;
  }
  nome_funzione_->assign(value);
}
inline void EseguiFunzione::set_nome_funzione(const char* value, size_t size) {
  set_has_nome_funzione();
  if (nome_funzione_ == &::google::protobuf::internal::kEmptyString) {
    nome_funzione_ = new ::std::string;
  }
  nome_funzione_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EseguiFunzione::mutable_nome_funzione() {
  set_has_nome_funzione();
  if (nome_funzione_ == &::google::protobuf::internal::kEmptyString) {
    nome_funzione_ = new ::std::string;
  }
  return nome_funzione_;
}
inline ::std::string* EseguiFunzione::release_nome_funzione() {
  clear_has_nome_funzione();
  if (nome_funzione_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nome_funzione_;
    nome_funzione_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .parametri.Parametro parametri = 3;
inline int EseguiFunzione::parametri_size() const {
  return parametri_.size();
}
inline void EseguiFunzione::clear_parametri() {
  parametri_.Clear();
}
inline const ::parametri::Parametro& EseguiFunzione::parametri(int index) const {
  return parametri_.Get(index);
}
inline ::parametri::Parametro* EseguiFunzione::mutable_parametri(int index) {
  return parametri_.Mutable(index);
}
inline ::parametri::Parametro* EseguiFunzione::add_parametri() {
  return parametri_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::parametri::Parametro >&
EseguiFunzione::parametri() const {
  return parametri_;
}
inline ::google::protobuf::RepeatedPtrField< ::parametri::Parametro >*
EseguiFunzione::mutable_parametri() {
  return &parametri_;
}

// optional .parametri.Parametro ritorno = 4;
inline bool EseguiFunzione::has_ritorno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EseguiFunzione::set_has_ritorno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EseguiFunzione::clear_has_ritorno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EseguiFunzione::clear_ritorno() {
  if (ritorno_ != NULL) ritorno_->::parametri::Parametro::Clear();
  clear_has_ritorno();
}
inline const ::parametri::Parametro& EseguiFunzione::ritorno() const {
  return ritorno_ != NULL ? *ritorno_ : *default_instance_->ritorno_;
}
inline ::parametri::Parametro* EseguiFunzione::mutable_ritorno() {
  set_has_ritorno();
  if (ritorno_ == NULL) ritorno_ = new ::parametri::Parametro;
  return ritorno_;
}
inline ::parametri::Parametro* EseguiFunzione::release_ritorno() {
  clear_has_ritorno();
  ::parametri::Parametro* temp = ritorno_;
  ritorno_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RichiestaCloseLibrary

// required int32 handle = 1;
inline bool RichiestaCloseLibrary::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RichiestaCloseLibrary::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RichiestaCloseLibrary::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RichiestaCloseLibrary::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 RichiestaCloseLibrary::handle() const {
  return handle_;
}
inline void RichiestaCloseLibrary::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
}

// -------------------------------------------------------------------

// Richiesta

// required .parametri.Richiesta.TipoRichiesta tipo = 1;
inline bool Richiesta::has_tipo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Richiesta::set_has_tipo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Richiesta::clear_has_tipo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Richiesta::clear_tipo() {
  tipo_ = 1;
  clear_has_tipo();
}
inline ::parametri::Richiesta_TipoRichiesta Richiesta::tipo() const {
  return static_cast< ::parametri::Richiesta_TipoRichiesta >(tipo_);
}
inline void Richiesta::set_tipo(::parametri::Richiesta_TipoRichiesta value) {
  GOOGLE_DCHECK(::parametri::Richiesta_TipoRichiesta_IsValid(value));
  set_has_tipo();
  tipo_ = value;
}

// optional .parametri.RichiestaLoadLibrary Richiesta_LoadLibrary = 21;
inline bool Richiesta::has_richiesta_loadlibrary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Richiesta::set_has_richiesta_loadlibrary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Richiesta::clear_has_richiesta_loadlibrary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Richiesta::clear_richiesta_loadlibrary() {
  if (richiesta_loadlibrary_ != NULL) richiesta_loadlibrary_->::parametri::RichiestaLoadLibrary::Clear();
  clear_has_richiesta_loadlibrary();
}
inline const ::parametri::RichiestaLoadLibrary& Richiesta::richiesta_loadlibrary() const {
  return richiesta_loadlibrary_ != NULL ? *richiesta_loadlibrary_ : *default_instance_->richiesta_loadlibrary_;
}
inline ::parametri::RichiestaLoadLibrary* Richiesta::mutable_richiesta_loadlibrary() {
  set_has_richiesta_loadlibrary();
  if (richiesta_loadlibrary_ == NULL) richiesta_loadlibrary_ = new ::parametri::RichiestaLoadLibrary;
  return richiesta_loadlibrary_;
}
inline ::parametri::RichiestaLoadLibrary* Richiesta::release_richiesta_loadlibrary() {
  clear_has_richiesta_loadlibrary();
  ::parametri::RichiestaLoadLibrary* temp = richiesta_loadlibrary_;
  richiesta_loadlibrary_ = NULL;
  return temp;
}

// optional .parametri.EseguiFunzione Esegui_Funzione = 22;
inline bool Richiesta::has_esegui_funzione() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Richiesta::set_has_esegui_funzione() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Richiesta::clear_has_esegui_funzione() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Richiesta::clear_esegui_funzione() {
  if (esegui_funzione_ != NULL) esegui_funzione_->::parametri::EseguiFunzione::Clear();
  clear_has_esegui_funzione();
}
inline const ::parametri::EseguiFunzione& Richiesta::esegui_funzione() const {
  return esegui_funzione_ != NULL ? *esegui_funzione_ : *default_instance_->esegui_funzione_;
}
inline ::parametri::EseguiFunzione* Richiesta::mutable_esegui_funzione() {
  set_has_esegui_funzione();
  if (esegui_funzione_ == NULL) esegui_funzione_ = new ::parametri::EseguiFunzione;
  return esegui_funzione_;
}
inline ::parametri::EseguiFunzione* Richiesta::release_esegui_funzione() {
  clear_has_esegui_funzione();
  ::parametri::EseguiFunzione* temp = esegui_funzione_;
  esegui_funzione_ = NULL;
  return temp;
}

// optional .parametri.RichiestaCloseLibrary Richiesta_Close_Library = 23;
inline bool Richiesta::has_richiesta_close_library() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Richiesta::set_has_richiesta_close_library() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Richiesta::clear_has_richiesta_close_library() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Richiesta::clear_richiesta_close_library() {
  if (richiesta_close_library_ != NULL) richiesta_close_library_->::parametri::RichiestaCloseLibrary::Clear();
  clear_has_richiesta_close_library();
}
inline const ::parametri::RichiestaCloseLibrary& Richiesta::richiesta_close_library() const {
  return richiesta_close_library_ != NULL ? *richiesta_close_library_ : *default_instance_->richiesta_close_library_;
}
inline ::parametri::RichiestaCloseLibrary* Richiesta::mutable_richiesta_close_library() {
  set_has_richiesta_close_library();
  if (richiesta_close_library_ == NULL) richiesta_close_library_ = new ::parametri::RichiestaCloseLibrary;
  return richiesta_close_library_;
}
inline ::parametri::RichiestaCloseLibrary* Richiesta::release_richiesta_close_library() {
  clear_has_richiesta_close_library();
  ::parametri::RichiestaCloseLibrary* temp = richiesta_close_library_;
  richiesta_close_library_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace parametri

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::parametri::Parametro_TipoParametro>() {
  return ::parametri::Parametro_TipoParametro_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::parametri::Richiesta_TipoRichiesta>() {
  return ::parametri::Richiesta_TipoRichiesta_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_parametri_2eproto__INCLUDED
